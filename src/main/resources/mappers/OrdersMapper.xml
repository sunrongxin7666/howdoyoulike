<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="srx.awesome.code.hdyl.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="srx.awesome.code.hdyl.bean.Orders" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="business_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="member_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comment_state" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="price" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, business_id, member_id, num, comment_state, price, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="srx.awesome.code.hdyl.bean.Orders" >
    insert into orders (id, business_id, member_id, 
      num, comment_state, price, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{businessId,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{commentState,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="srx.awesome.code.hdyl.bean.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="commentState != null" >
        comment_state,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="commentState != null" >
        #{commentState,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="srx.awesome.code.hdyl.bean.Orders" >
    update orders
    <set >
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="commentState != null" >
        comment_state = #{commentState,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="srx.awesome.code.hdyl.bean.Orders" >
    update orders
    set business_id = #{businessId,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      comment_state = #{commentState,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>